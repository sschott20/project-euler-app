'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _holderjs = require('holderjs');

var _holderjs2 = _interopRequireDefault(_holderjs);

var _lodash = require('lodash');

var _qs = require('qs');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } // vendor modules

// private variables

var HOLDER_ATTR_NAMES = ['theme', 'random', 'bg', 'fg', 'text', 'size', 'font', 'align', 'outline', 'lineWrap'];

var REGEX_PERCENTAGE = /\d+(%|p)/;

var REGEX_PX = /\d+px%/;

var REGEX_NUMBER = /\d+/;

var SHOULD_UPDATE_ON_RESIZE_DEFAULT = true;

// private functions

/**
 * Turn a string with a number and a suffix into a string with a number.
 * '100px' => '100'
 * '50%' => '50'
 * @param  {string} numberString
 * @return {string}
 */
function sanitizeNumber(numberString) {
  return String(Number.parseInt(String(numberString), 10));
}

function sanitizeSizeValue(size) {
  var stringSize = size;
  if (typeof stringSize !== 'string') {
    stringSize = String(stringSize);
  }

  if (REGEX_PERCENTAGE.test(stringSize)) {
    return sanitizeNumber(stringSize) + 'p';
  }

  if (REGEX_PX.test(stringSize)) {
    return sanitizeNumber(stringSize);
  }

  if (REGEX_NUMBER.test(stringSize)) {
    return stringSize;
  }

  console.warn('holder-js size not valid: ' + size + ', defaulting to 100%');

  return '100p';
}

function createPlaceholder(node) {
  var updateOnResize = arguments.length <= 1 || arguments[1] === undefined ? SHOULD_UPDATE_ON_RESIZE_DEFAULT : arguments[1];

  _holderjs2.default.run({
    domain: 'holder.js',
    images: node,
    object: null,
    bgnodes: null,
    stylenodes: null
  });
  if (updateOnResize === false) {
    _holderjs2.default.setResizeUpdate(node, false);
  }
}

function updatePlaceholder(node) {
  var updateOnResize = arguments.length <= 1 || arguments[1] === undefined ? SHOULD_UPDATE_ON_RESIZE_DEFAULT : arguments[1];

  _holderjs2.default.setResizeUpdate(node, Boolean(updateOnResize));
}

// exports

var Holder = function (_Component) {
  _inherits(Holder, _Component);

  function Holder() {
    _classCallCheck(this, Holder);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Holder).apply(this, arguments));
  }

  _createClass(Holder, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var width = _props.width;
      var height = _props.height;

      var holderConfig = (0, _lodash.pick)(this.props, HOLDER_ATTR_NAMES);
      var htmlAttrs = (0, _lodash.omit)(this.props, HOLDER_ATTR_NAMES);

      var src = 'holder.js/' + sanitizeSizeValue(width) + 'x' + sanitizeSizeValue(height) + '?' + (0, _qs.stringify)(holderConfig);
      return _react2.default.createElement('img', _extends({
        ref: 'placeholder',
        'data-src': src
      }, htmlAttrs));
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var placeholderNode = _reactDom2.default.findDOMNode(this.refs.placeholder);
      createPlaceholder(placeholderNode, this.props.updateOnResize);
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var placeholderNode = _reactDom2.default.findDOMNode(this.refs.placeholder);
      updatePlaceholder(placeholderNode, this.props.updateOnResize);
    }
  }]);

  return Holder;
}(_react.Component);

Holder.propTypes = {
  width: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]).isRequired,
  height: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.string, _react2.default.PropTypes.number]).isRequired,
  updateOnResize: _react2.default.PropTypes.bool
};

Holder.defaultProps = {
  width: '100',
  height: '100'
};

exports.default = Holder;