{"ast":null,"code":"/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\n\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\n\nvar ClientReactRootIndex = require('./ClientReactRootIndex');\n\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\n\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\n\nvar ReactBrowserComponentMixin = require('./ReactBrowserComponentMixin');\n\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\n\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\n\nvar ReactDOMComponent = require('./ReactDOMComponent');\n\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\n\nvar ReactEventListener = require('./ReactEventListener');\n\nvar ReactInjection = require('./ReactInjection');\n\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar ReactMount = require('./ReactMount');\n\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\n\nvar SelectEventPlugin = require('./SelectEventPlugin');\n\nvar ServerReactRootIndex = require('./ServerReactRootIndex');\n\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n\n  alreadyInjected = true;\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\n  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\n\n    if (/[?&]react_perf\\b/.test(url)) {\n      var ReactDefaultPerf = require('./ReactDefaultPerf');\n\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};","map":null,"metadata":{},"sourceType":"script"}