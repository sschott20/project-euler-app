{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\src\\\\CardGroup.js\";\nimport React, { Component } from \"react\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport ProblemCard from \"./ProblemCard\";\nimport Prism from \"prismjs\";\nimport \"./prism.css\";\nimport \"./CardGroup.css\";\n\nvar CardGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardGroup, _Component);\n\n  _createClass(CardGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n      console.log(\"highlight\");\n    }\n  }]);\n\n  function CardGroup(props) {\n    var _this;\n\n    _classCallCheck(this, CardGroup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CardGroup).call(this, props));\n    _this.state = {\n      lychrelNumbers: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CardGroup, [{\n    key: \"handleClick\",\n    value: function handleClick(title, problem, solution) {\n      this.props.onClick(title, problem, solution);\n    }\n  }, {\n    key: \"changeLychrelInput\",\n    value: function changeLychrelInput(event) {\n      this.setState({\n        lychrelNumbers: event.target.value\n      });\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse(num) {\n      return Number.parseInt(num.toString().split(\"\").reverse().join(\"\"));\n    }\n  }, {\n    key: \"lychrelSolve\",\n    value: function lychrelSolve(target) {\n      var reverse;\n      var sum;\n      var lychrel = [];\n\n      for (var i = 0; i < target; i++) {\n        sum = i;\n\n        for (var n = 0; n < 50; n++) {\n          reverse = this.reverse(sum);\n          sum += reverse;\n\n          if (sum === this.reverse(sum)) {\n            break;\n          } else if (n === 49) {\n            lychrel.push(i);\n          }\n        }\n      }\n\n      return lychrel.length;\n    }\n  }, {\n    key: \"primePairSolve\",\n    value: function primePairSolve() {\n      var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111, 2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161, 2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243, 2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297, 2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357, 2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411, 2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473, 2477];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      this.lychrelProblem = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }), \"Not all numbers produce palindromes so quickly. For example,\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), \"\\u2003\\u2003349 + 943 = 1292,\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }), \"\\u2003\\u20031292 + 2921 = 4213\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }), \"\\u2003\\u20034213 + 3124 = 7337\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }), \"That is, 349 took three iterations to arrive at a palindrome.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }), \"Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits).\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }), \"Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }), \"How many Lychrel numbers are there below ten-thousand?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      })));\n      this.lychrelSolution = React.createElement(\"div\", {\n        style: {\n          padding: \"0 , 10vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"mainText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"We start with two for loops that form the basis of the algorithim. One will search every number from 0 to the target, and the other one will check every number to see if it is a lychrel\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-javascript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"\\n\\t\\t\\tlychrelSolve(target) {\\n\\t\\t\\t\\tfor (let i = 0; i < target; i ++) {\\n\\t\\t\\t\\t\\tfor(let n = 0; n < 50; n++) {\\n\\t\\t\\t\\t\\t\\t//check for Lychrel\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, \"We need to add a way to get the palendrome of a number, so we will write a function which takes an integer as input and returns the palendrom. Javascript has no built in methods to reverse the order of characters in an integer, but we can get around this by first turning it into a string, then reversing it, then putting it back together\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-javascript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, \"\\n\\t\\t\\treverse(int) {\\n\\t\\t\\t\\treturn Number.parseInt(\\n\\t\\t\\t\\t\\tint\\n\\t\\t\\t\\t\\t\\t.toString()\\n\\t\\t\\t\\t\\t\\t.split(\\\"\\\")\\n\\t\\t\\t\\t\\t\\t.reverse()\\n\\t\\t\\t\\t\\t\\t.join(\\\"\\\")\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tlychrelSolve(target) {\\n\\t\\t\\t\\tfor (let i = 0; i < target; i ++) {\\n\\t\\t\\t\\t\\tfor(let n = 0; n < 50; n++) {\\n\\t\\t\\t\\t\\t\\t//check for Lychrel\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\t\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \"Now all we have to do is add the number to its palendrom and see if it becomes a palendrom itself. If it gets to the 50th iteration, as stated in the problem we can assume Lychrelness, and add it to our count\"), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-javascript\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, \"\\n\\t\\t\\treverse(int) {\\n\\t\\t\\t\\treturn Number.parseInt(\\n\\t\\t\\t\\t\\tint\\n\\t\\t\\t\\t\\t\\t.toString()\\n\\t\\t\\t\\t\\t\\t.split(\\\"\\\")\\n\\t\\t\\t\\t\\t\\t.reverse()\\n\\t\\t\\t\\t\\t\\t.join(\\\"\\\")\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tlychrelSolve(target) {\\n\\t\\t\\t\\tlet reverse;\\n\\t\\t\\t\\tlet sum;\\n\\t\\t\\t\\tlet count = 0;\\n\\t\\t\\t\\tfor (let i = 0; i < target; i ++) {\\n\\t\\t\\t\\t\\tsum = i;\\n\\t\\t\\t\\t\\tfor(let n = 0; n < 50; n++) {\\n\\t\\t\\t\\t\\t\\tif (sum === reverse(sum)){\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t} else if (n === 49) {\\n\\t\\t\\t\\t\\t\\t\\tcount += 1;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn count;\\n\\t\\t\\t}\\n\\t\\t\\t\")));\n      return React.createElement(\"div\", {\n        id: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, React.createElement(CardColumns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, React.createElement(ProblemCard, {\n        title: \"Lychrel Numbers\",\n        text: \"How many times do you have to reverse add a number to itself before it becomes a palendrome?\",\n        onClick: function onClick(i, e, o) {\n          return _this2.handleClick(i, e, o);\n        },\n        problem: this.lychrelProblem,\n        solution: this.lychrelSolution,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }), React.createElement(ProblemCard, {\n        title: \"Discrete Primes\",\n        text: \"Some quick example text to build on the card title and make up the bulk of the card's content?\",\n        onClick: function onClick(i, e) {\n          return _this2.handleClick(i, e);\n        },\n        problem: this.lychrelProblem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        },\n        __self: this\n      }), React.createElement(ProblemCard, {\n        title: \"Prime Factorization\",\n        text: \"What is the minimum number of tries it takes to factor a given number?\",\n        onClick: function onClick(i, e) {\n          return _this2.handleClick(i, e);\n        },\n        problem: this.lychrelProblem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CardGroup;\n}(Component);\n\nexport default CardGroup;","map":{"version":3,"sources":["C:\\Users\\sebal\\Desktop\\Coding\\reactJS\\project-euler-app\\src\\CardGroup.js"],"names":["React","Component","CardColumns","ProblemCard","Prism","CardGroup","highlightAll","console","log","props","state","lychrelNumbers","title","problem","solution","onClick","event","setState","target","value","num","Number","parseInt","toString","split","reverse","join","sum","lychrel","i","n","push","length","primes","lychrelProblem","lychrelSolution","padding","e","o","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\nimport ProblemCard from \"./ProblemCard\";\r\nimport Prism from \"prismjs\";\r\nimport \"./prism.css\";\r\nimport \"./CardGroup.css\";\r\nclass CardGroup extends Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll();\r\n    console.log(\"highlight\");\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lychrelNumbers: \"\"\r\n    };\r\n  }\r\n  handleClick(title, problem, solution) {\r\n    this.props.onClick(title, problem, solution);\r\n  }\r\n  changeLychrelInput(event) {\r\n    this.setState({ lychrelNumbers: event.target.value });\r\n  }\r\n  reverse(num) {\r\n    return Number.parseInt(\r\n      num\r\n        .toString()\r\n        .split(\"\")\r\n        .reverse()\r\n        .join(\"\")\r\n    );\r\n  }\r\n  lychrelSolve(target) {\r\n    let reverse;\r\n    let sum;\r\n    let lychrel = [];\r\n    for (let i = 0; i < target; i++) {\r\n      sum = i;\r\n      for (let n = 0; n < 50; n++) {\r\n        reverse = this.reverse(sum);\r\n        sum += reverse;\r\n        if (sum === this.reverse(sum)) {\r\n          break;\r\n        } else if (n === 49) {\r\n          lychrel.push(i);\r\n        }\r\n      }\r\n    }\r\n    return lychrel.length;\r\n  }\r\n  primePairSolve() {\r\n    const primes = [\r\n      2,\r\n      3,\r\n      5,\r\n      7,\r\n      11,\r\n      13,\r\n      17,\r\n      19,\r\n      23,\r\n      29,\r\n      31,\r\n      37,\r\n      41,\r\n      43,\r\n      47,\r\n      53,\r\n      59,\r\n      61,\r\n      67,\r\n      71,\r\n      73,\r\n      79,\r\n      83,\r\n      89,\r\n      97,\r\n      101,\r\n      103,\r\n      107,\r\n      109,\r\n      113,\r\n      127,\r\n      131,\r\n      137,\r\n      139,\r\n      149,\r\n      151,\r\n      157,\r\n      163,\r\n      167,\r\n      173,\r\n      179,\r\n      181,\r\n      191,\r\n      193,\r\n      197,\r\n      199,\r\n      211,\r\n      223,\r\n      227,\r\n      229,\r\n      233,\r\n      239,\r\n      241,\r\n      251,\r\n      257,\r\n      263,\r\n      269,\r\n      271,\r\n      277,\r\n      281,\r\n      283,\r\n      293,\r\n      307,\r\n      311,\r\n      313,\r\n      317,\r\n      331,\r\n      337,\r\n      347,\r\n      349,\r\n      353,\r\n      359,\r\n      367,\r\n      373,\r\n      379,\r\n      383,\r\n      389,\r\n      397,\r\n      401,\r\n      409,\r\n      419,\r\n      421,\r\n      431,\r\n      433,\r\n      439,\r\n      443,\r\n      449,\r\n      457,\r\n      461,\r\n      463,\r\n      467,\r\n      479,\r\n      487,\r\n      491,\r\n      499,\r\n      503,\r\n      509,\r\n      521,\r\n      523,\r\n      541,\r\n      547,\r\n      557,\r\n      563,\r\n      569,\r\n      571,\r\n      577,\r\n      587,\r\n      593,\r\n      599,\r\n      601,\r\n      607,\r\n      613,\r\n      617,\r\n      619,\r\n      631,\r\n      641,\r\n      643,\r\n      647,\r\n      653,\r\n      659,\r\n      661,\r\n      673,\r\n      677,\r\n      683,\r\n      691,\r\n      701,\r\n      709,\r\n      719,\r\n      727,\r\n      733,\r\n      739,\r\n      743,\r\n      751,\r\n      757,\r\n      761,\r\n      769,\r\n      773,\r\n      787,\r\n      797,\r\n      809,\r\n      811,\r\n      821,\r\n      823,\r\n      827,\r\n      829,\r\n      839,\r\n      853,\r\n      857,\r\n      859,\r\n      863,\r\n      877,\r\n      881,\r\n      883,\r\n      887,\r\n      907,\r\n      911,\r\n      919,\r\n      929,\r\n      937,\r\n      941,\r\n      947,\r\n      953,\r\n      967,\r\n      971,\r\n      977,\r\n      983,\r\n      991,\r\n      997,\r\n      1009,\r\n      1013,\r\n      1019,\r\n      1021,\r\n      1031,\r\n      1033,\r\n      1039,\r\n      1049,\r\n      1051,\r\n      1061,\r\n      1063,\r\n      1069,\r\n      1087,\r\n      1091,\r\n      1093,\r\n      1097,\r\n      1103,\r\n      1109,\r\n      1117,\r\n      1123,\r\n      1129,\r\n      1151,\r\n      1153,\r\n      1163,\r\n      1171,\r\n      1181,\r\n      1187,\r\n      1193,\r\n      1201,\r\n      1213,\r\n      1217,\r\n      1223,\r\n      1229,\r\n      1231,\r\n      1237,\r\n      1249,\r\n      1259,\r\n      1277,\r\n      1279,\r\n      1283,\r\n      1289,\r\n      1291,\r\n      1297,\r\n      1301,\r\n      1303,\r\n      1307,\r\n      1319,\r\n      1321,\r\n      1327,\r\n      1361,\r\n      1367,\r\n      1373,\r\n      1381,\r\n      1399,\r\n      1409,\r\n      1423,\r\n      1427,\r\n      1429,\r\n      1433,\r\n      1439,\r\n      1447,\r\n      1451,\r\n      1453,\r\n      1459,\r\n      1471,\r\n      1481,\r\n      1483,\r\n      1487,\r\n      1489,\r\n      1493,\r\n      1499,\r\n      1511,\r\n      1523,\r\n      1531,\r\n      1543,\r\n      1549,\r\n      1553,\r\n      1559,\r\n      1567,\r\n      1571,\r\n      1579,\r\n      1583,\r\n      1597,\r\n      1601,\r\n      1607,\r\n      1609,\r\n      1613,\r\n      1619,\r\n      1621,\r\n      1627,\r\n      1637,\r\n      1657,\r\n      1663,\r\n      1667,\r\n      1669,\r\n      1693,\r\n      1697,\r\n      1699,\r\n      1709,\r\n      1721,\r\n      1723,\r\n      1733,\r\n      1741,\r\n      1747,\r\n      1753,\r\n      1759,\r\n      1777,\r\n      1783,\r\n      1787,\r\n      1789,\r\n      1801,\r\n      1811,\r\n      1823,\r\n      1831,\r\n      1847,\r\n      1861,\r\n      1867,\r\n      1871,\r\n      1873,\r\n      1877,\r\n      1879,\r\n      1889,\r\n      1901,\r\n      1907,\r\n      1913,\r\n      1931,\r\n      1933,\r\n      1949,\r\n      1951,\r\n      1973,\r\n      1979,\r\n      1987,\r\n      1993,\r\n      1997,\r\n      1999,\r\n      2003,\r\n      2011,\r\n      2017,\r\n      2027,\r\n      2029,\r\n      2039,\r\n      2053,\r\n      2063,\r\n      2069,\r\n      2081,\r\n      2083,\r\n      2087,\r\n      2089,\r\n      2099,\r\n      2111,\r\n      2113,\r\n      2129,\r\n      2131,\r\n      2137,\r\n      2141,\r\n      2143,\r\n      2153,\r\n      2161,\r\n      2179,\r\n      2203,\r\n      2207,\r\n      2213,\r\n      2221,\r\n      2237,\r\n      2239,\r\n      2243,\r\n      2251,\r\n      2267,\r\n      2269,\r\n      2273,\r\n      2281,\r\n      2287,\r\n      2293,\r\n      2297,\r\n      2309,\r\n      2311,\r\n      2333,\r\n      2339,\r\n      2341,\r\n      2347,\r\n      2351,\r\n      2357,\r\n      2371,\r\n      2377,\r\n      2381,\r\n      2383,\r\n      2389,\r\n      2393,\r\n      2399,\r\n      2411,\r\n      2417,\r\n      2423,\r\n      2437,\r\n      2441,\r\n      2447,\r\n      2459,\r\n      2467,\r\n      2473,\r\n      2477\r\n    ];\r\n  }\r\n  render() {\r\n    this.lychrelProblem = (\r\n      <div>\r\n        <p>\r\n          If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.\r\n          <br />\r\n          <br />\r\n          Not all numbers produce palindromes so quickly. For example,\r\n          <br />\r\n          &emsp;&emsp;349 + 943 = 1292,\r\n          <br />\r\n          &emsp;&emsp;1292 + 2921 = 4213\r\n          <br />\r\n          &emsp;&emsp;4213 + 3124 = 7337\r\n          <br />\r\n          That is, 349 took three iterations to arrive at a palindrome.\r\n          <br />\r\n          <br />\r\n          Although no one has proved it yet, it is thought that some numbers,\r\n          like 196, never produce a palindrome. A number that never forms a\r\n          palindrome through the reverse and add process is called a Lychrel\r\n          number. Due to the theoretical nature of these numbers, and for the\r\n          purpose of this problem, we shall assume that a number is Lychrel\r\n          until proven otherwise. In addition you are given that for every\r\n          number below ten-thousand, it will either (i) become a palindrome in\r\n          less than fifty iterations, or, (ii) no one, with all the computing\r\n          power that exists, has managed so far to map it to a palindrome. In\r\n          fact, 10677 is the first number to be shown to require over fifty\r\n          iterations before producing a palindrome: 4668731596684224866951378664\r\n          (53 iterations, 28-digits).\r\n          <br />\r\n          <br />\r\n          Surprisingly, there are palindromic numbers that are themselves\r\n          Lychrel numbers; the first example is 4994.\r\n          <br />\r\n          <br />\r\n          How many Lychrel numbers are there below ten-thousand?\r\n          <br />\r\n        </p>\r\n      </div>\r\n    );\r\n    this.lychrelSolution = (\r\n      <div style={{ padding: \"0 , 10vw\" }}>\r\n        <p className=\"mainText\">\r\n          We start with two for loops that form the basis of the algorithim. One\r\n          will search every number from 0 to the target, and the other one will\r\n          check every number to see if it is a lychrel\r\n        </p>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\tlychrelSolve(target) {\r\n\t\t\t\tfor (let i = 0; i < target; i ++) {\r\n\t\t\t\t\tfor(let n = 0; n < 50; n++) {\r\n\t\t\t\t\t\t//check for Lychrel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t`}\r\n          </code>\r\n        </pre>\r\n        <br />\r\n        <p>\r\n          We need to add a way to get the palendrome of a number, so we will\r\n          write a function which takes an integer as input and returns the\r\n          palendrom. Javascript has no built in methods to reverse the order of\r\n          characters in an integer, but we can get around this by first turning\r\n          it into a string, then reversing it, then putting it back together\r\n        </p>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\treverse(int) {\r\n\t\t\t\treturn Number.parseInt(\r\n\t\t\t\t\tint\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.split(\"\")\r\n\t\t\t\t\t\t.reverse()\r\n\t\t\t\t\t\t.join(\"\")\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlychrelSolve(target) {\r\n\t\t\t\tfor (let i = 0; i < target; i ++) {\r\n\t\t\t\t\tfor(let n = 0; n < 50; n++) {\r\n\t\t\t\t\t\t//check for Lychrel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t`}\r\n          </code>\r\n        </pre>\r\n        <br />\r\n        <p>\r\n          Now all we have to do is add the number to its palendrom and see if it\r\n          becomes a palendrom itself. If it gets to the 50th iteration, as\r\n          stated in the problem we can assume Lychrelness, and add it to our\r\n          count\r\n        </p>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\treverse(int) {\r\n\t\t\t\treturn Number.parseInt(\r\n\t\t\t\t\tint\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.split(\"\")\r\n\t\t\t\t\t\t.reverse()\r\n\t\t\t\t\t\t.join(\"\")\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlychrelSolve(target) {\r\n\t\t\t\tlet reverse;\r\n\t\t\t\tlet sum;\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tfor (let i = 0; i < target; i ++) {\r\n\t\t\t\t\tsum = i;\r\n\t\t\t\t\tfor(let n = 0; n < 50; n++) {\r\n\t\t\t\t\t\tif (sum === reverse(sum)){\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (n === 49) {\r\n\t\t\t\t\t\t\tcount += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn count;\r\n\t\t\t}\r\n\t\t\t`}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div id=\"card-columns\">\r\n        <CardColumns>\r\n          <ProblemCard\r\n            title=\"Lychrel Numbers\"\r\n            text=\"How many times do you have to reverse add a number to itself before it becomes a palendrome?\"\r\n            onClick={(i, e, o) => this.handleClick(i, e, o)}\r\n            problem={this.lychrelProblem}\r\n            solution={this.lychrelSolution}\r\n          />\r\n          <ProblemCard\r\n            title=\"Discrete Primes\"\r\n            text=\"Some quick example text to build on the card title and make up the bulk of the card's content?\"\r\n            onClick={(i, e) => this.handleClick(i, e)}\r\n            problem={this.lychrelProblem}\r\n          />\r\n          <ProblemCard\r\n            title=\"Prime Factorization\"\r\n            text=\"What is the minimum number of tries it takes to factor a given number?\"\r\n            onClick={(i, e) => this.handleClick(i, e)}\r\n            problem={this.lychrelProblem}\r\n          />\r\n        </CardColumns>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardGroup;\r\n"]},"metadata":{},"sourceType":"module"}