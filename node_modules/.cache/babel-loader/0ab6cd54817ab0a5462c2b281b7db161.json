{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sebal\\\\Desktop\\\\Coding\\\\reactJS\\\\project-euler-app\\\\src\\\\CardGroup.js\";\nimport React, { Component } from \"react\";\nimport CardColumns from \"react-bootstrap/CardColumns\";\nimport ProblemCard from \"./ProblemCard\";\n\nvar CardGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardGroup, _Component);\n\n  function CardGroup() {\n    _classCallCheck(this, CardGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardGroup).apply(this, arguments));\n  }\n\n  _createClass(CardGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.lychrelSolution = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"If we take 47, reverse and add, 47 + 74 = 121, which is palindromic. Not all numbers produce palindromes so quickly. For example, 349 + 943 = 1292, 1292 + 2921 = 4213 4213 + 3124 = 7337 That is, 349 took three iterations to arrive at a palindrome. Although no one has proved it yet, it is thought that some numbers, like 196, never produce a palindrome. A number that never forms a palindrome through the reverse and add process is called a Lychrel number. Due to the theoretical nature of these numbers, and for the purpose of this problem, we shall assume that a number is Lychrel until proven otherwise. In addition you are given that for every number below ten-thousand, it will either (i) become a palindrome in less than fifty iterations, or, (ii) no one, with all the computing power that exists, has managed so far to map it to a palindrome. In fact, 10677 is the first number to be shown to require over fifty iterations before producing a palindrome: 4668731596684224866951378664 (53 iterations, 28-digits). Surprisingly, there are palindromic numbers that are themselves Lychrel numbers; the first example is 4994. How many Lychrel numbers are there below ten-thousand? NOTE: Wording was modified slightly on 24 April 2007 to emphasise the theoretical nature of Lychrel numbers.\");\n      return React.createElement(\"div\", {\n        id: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(CardColumns, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(ProblemCard, {\n        title: \"Lychrel Numbers\",\n        text: \"How many times do you have to reverse add a number to inself before it becomes a palendrome?\",\n        onClick: function onClick(i, e) {\n          return _this.handleClick(i, e);\n        },\n        solution: this.lychrelSolution,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(ProblemCard, {\n        title: \"title two\",\n        text: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\n        onClick: function onClick(i, e) {\n          return _this.handleClick(i, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(ProblemCard, {\n        title: \"title three\",\n        text: \"Some quick example text to build on the card title and make up the bulk of the card's content.\",\n        onClick: function onClick(i, e) {\n          return _this.handleClick(i, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CardGroup;\n}(Component);\n\nexport default CardGroup;","map":{"version":3,"sources":["C:\\Users\\sebal\\Desktop\\Coding\\reactJS\\project-euler-app\\src\\CardGroup.js"],"names":["React","Component","CardColumns","ProblemCard","CardGroup","lychrelSolution","i","e","handleClick"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;IAEMC,S;;;;;;;;;;;;;6BACK;AAAA;;AACP,WAAKC,eAAL,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qxCADF;AAuBA,aACE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAC,iBADR;AAEE,QAAA,IAAI,EAAC,8FAFP;AAGE,QAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAU,KAAI,CAACC,WAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAV;AAAA,SAHX;AAIE,QAAA,QAAQ,EAAE,KAAKF,eAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,IAAI,EAAC,gGAFP;AAGE,QAAA,OAAO,EAAE,iBAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAU,KAAI,CAACC,WAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAV;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAYE,oBAAC,WAAD;AACE,QAAA,KAAK,EAAC,aADR;AAEE,QAAA,IAAI,EAAC,gGAFP;AAGE,QAAA,OAAO,EAAE,iBAACD,CAAD,EAAIC,CAAJ;AAAA,iBAAU,KAAI,CAACC,WAAL,CAAiBF,CAAjB,EAAoBC,CAApB,CAAV;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF,CADF;AAsBD;;;;EA/CqBN,S;;AAkDxB,eAAeG,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\n\r\nimport ProblemCard from \"./ProblemCard\";\r\n\r\nclass CardGroup extends Component {\r\n  render() {\r\n    this.lychrelSolution = (\r\n      <p>\r\n        If we take 47, reverse and add, 47 + 74 = 121, which is palindromic. Not\r\n        all numbers produce palindromes so quickly. For example, 349 + 943 =\r\n        1292, 1292 + 2921 = 4213 4213 + 3124 = 7337 That is, 349 took three\r\n        iterations to arrive at a palindrome. Although no one has proved it yet,\r\n        it is thought that some numbers, like 196, never produce a palindrome. A\r\n        number that never forms a palindrome through the reverse and add process\r\n        is called a Lychrel number. Due to the theoretical nature of these\r\n        numbers, and for the purpose of this problem, we shall assume that a\r\n        number is Lychrel until proven otherwise. In addition you are given that\r\n        for every number below ten-thousand, it will either (i) become a\r\n        palindrome in less than fifty iterations, or, (ii) no one, with all the\r\n        computing power that exists, has managed so far to map it to a\r\n        palindrome. In fact, 10677 is the first number to be shown to require\r\n        over fifty iterations before producing a palindrome:\r\n        4668731596684224866951378664 (53 iterations, 28-digits). Surprisingly,\r\n        there are palindromic numbers that are themselves Lychrel numbers; the\r\n        first example is 4994. How many Lychrel numbers are there below\r\n        ten-thousand? NOTE: Wording was modified slightly on 24 April 2007 to\r\n        emphasise the theoretical nature of Lychrel numbers.\r\n      </p>\r\n    );\r\n    return (\r\n      <div id=\"card-columns\">\r\n        <CardColumns>\r\n          <ProblemCard\r\n            title=\"Lychrel Numbers\"\r\n            text=\"How many times do you have to reverse add a number to inself before it becomes a palendrome?\"\r\n            onClick={(i, e) => this.handleClick(i, e)}\r\n            solution={this.lychrelSolution}\r\n          />\r\n          <ProblemCard\r\n            title=\"title two\"\r\n            text=\"Some quick example text to build on the card title and make up the bulk of the card's content.\"\r\n            onClick={(i, e) => this.handleClick(i, e)}\r\n          />\r\n          <ProblemCard\r\n            title=\"title three\"\r\n            text=\"Some quick example text to build on the card title and make up the bulk of the card's content.\"\r\n            onClick={(i, e) => this.handleClick(i, e)}\r\n          />\r\n        </CardColumns>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardGroup;\r\n"]},"metadata":{},"sourceType":"module"}