{"version":3,"sources":["Factors.js","ProblemCard.js","CardGroup.js","Display.js","App.js","serviceWorker.js","index.js"],"names":["Component","ProblemCard","this","props","onClick","title","problem","solution","_this","react_default","a","createElement","Card_default","style","width","Body","Title","Text","text","Button_default","margin","handleClick","variant","Row_default","Col_default","textAlign","problemNumber","difficulty","CardGroup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","lychrelNumbers","Prism","highlightAll","console","log","event","setState","target","value","_this2","lychrelProblem","lychrelSolution","padding","className","quadraticPrimesProblem","quadraticPrimesSolution","pandigitalMultiplesProblem","pandigitalMultiplesSolution","id","CardColumns_default","src_ProblemCard","i","e","o","Display","hideCard","body","showProblem","displayProblem","displaySolution","buttonName","Jumbotron_default","xs","displayTitle","marginTop","fluid","Container_default","height","showSolution","App","cards","prevState","cardsInstance","src_CardGroup_0","changeDisplay","displayInstance","src_Display","App_MainNav","MainNav","Navbar_default","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav_default","Link","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c076f59a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Breadcrumb from \"react-bootstrap/Breadcrumb\";\r\nimport BreadcrumbItem from \"react-bootstrap/BreadcrumbItem\";\r\n\r\nclass Factors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testNum: this.props.test\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"breadcrumb\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>{this.state.testNum}</BreadcrumbItem>\r\n          <BreadcrumbItem>Yeetus</BreadcrumbItem>\r\n        </Breadcrumb>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Factors;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nclass ProblemCard extends Component {\r\n  handleClick() {\r\n    this.props.onClick(\r\n      this.props.title,\r\n      this.props.problem,\r\n      this.props.solution\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <Card style={{ width: \"18rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>{this.props.title}</Card.Title>\r\n          <Card.Text>{this.props.text}</Card.Text>\r\n          <Button\r\n            style={{ margin: \"1em\" }}\r\n            onClick={() => this.handleClick()}\r\n            variant=\"outline-primary\"\r\n          >\r\n            View Problem\r\n          </Button>\r\n          <Row>\r\n            <Col style={{ textAlign: \"Center\" }}>\r\n              Problem {this.props.problemNumber}\r\n            </Col>\r\n            <Col style={{ textAlign: \"Center\" }}>\r\n              Difficulty: {this.props.difficulty}\r\n            </Col>\r\n          </Row>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProblemCard;\r\n","import React, { Component } from \"react\";\r\nimport CardColumns from \"react-bootstrap/CardColumns\";\r\nimport ProblemCard from \"./ProblemCard\";\r\nimport Prism from \"prismjs\";\r\nimport \"./prism.css\";\r\nimport \"./CardGroup.css\";\r\nclass CardGroup extends Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll();\r\n    console.log(\"highlight\");\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lychrelNumbers: \"\"\r\n    };\r\n  }\r\n  handleClick(title, problem, solution) {\r\n    this.props.onClick(title, problem, solution);\r\n  }\r\n  changeLychrelInput(event) {\r\n    this.setState({ lychrelNumbers: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    this.lychrelProblem = (\r\n      <div>\r\n        <p>\r\n          If we take 47, reverse and add, 47 + 74 = 121, which is palindromic.\r\n          <br />\r\n          <br />\r\n          Not all numbers produce palindromes so quickly. For example,\r\n          <br />\r\n          &emsp;&emsp;&emsp;&emsp;349 + 943 = 1292,\r\n          <br />\r\n          &emsp;&emsp;&emsp;&emsp;1292 + 2921 = 4213\r\n          <br />\r\n          &emsp;&emsp;&emsp;&emsp;4213 + 3124 = 7337\r\n          <br />\r\n          That is, 349 took three iterations to arrive at a palindrome.\r\n          <br />\r\n          <br />\r\n          Although no one has proved it yet, it is thought that some numbers,\r\n          like 196, never produce a palindrome. A number that never forms a\r\n          palindrome through the reverse and add process is called a Lychrel\r\n          number. Due to the theoretical nature of these numbers, and for the\r\n          purpose of this problem, we shall assume that a number is Lychrel\r\n          until proven otherwise. In addition you are given that for every\r\n          number below ten-thousand, it will either (i) become a palindrome in\r\n          less than fifty iterations, or, (ii) no one, with all the computing\r\n          power that exists, has managed so far to map it to a palindrome. In\r\n          fact, 10677 is the first number to be shown to require over fifty\r\n          iterations before producing a palindrome: 4668731596684224866951378664\r\n          (53 iterations, 28-digits).\r\n          <br />\r\n          <br />\r\n          Surprisingly, there are palindromic numbers that are themselves\r\n          Lychrel numbers; the first example is 4994.\r\n          <br />\r\n          <br />\r\n          How many Lychrel numbers are there below ten-thousand?\r\n          <br />\r\n        </p>\r\n      </div>\r\n    );\r\n    this.lychrelSolution = (\r\n      <div style={{ padding: \"0 , 10vw\" }}>\r\n        <p className=\"mainText\">\r\n          We start with two for loops that form the basis of the algorithim. One\r\n          will search every number from 0 to the target, and the other one will\r\n          check every number to see if it is a lychrel\r\n        </p>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\tfunction lychrelSolve(target) {\r\n\t\t\t\tfor (let i = 0; i < target; i ++) {\r\n\t\t\t\t\tfor(let n = 0; n < 50; n++) {\r\n\t\t\t\t\t\t//check for Lychrel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t`}\r\n          </code>\r\n        </pre>\r\n        <br />\r\n        <p>\r\n          We need to add a way to get the palendrome of a number, so we will\r\n          write a function which takes an integer as input and returns the\r\n          palendrom. Javascript has no built in methods to reverse the order of\r\n          characters in an integer, but we can get around this by first turning\r\n          it into a string, then reversing it, then putting it back together\r\n        </p>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\tfunction reverse(int) {\r\n\t\t\t\treturn Number.parseInt(\r\n\t\t\t\t\tint\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.split(\"\")\r\n\t\t\t\t\t\t.reverse()\r\n\t\t\t\t\t\t.join(\"\")\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tfunction lychrelSolve(target) {\r\n\t\t\t\tfor (let i = 0; i < target; i ++) {\r\n\t\t\t\t\tfor(let n = 0; n < 50; n++) {\r\n\t\t\t\t\t\t//check for Lychrel\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t`}\r\n          </code>\r\n        </pre>\r\n        <br />\r\n        <p>\r\n          Now all we have to do is add the number to its palendrom and see if it\r\n          becomes a palendrom itself. If it gets to the 50th iteration, as\r\n          stated in the problem we can assume Lychrelness, and add it to our\r\n          count\r\n        </p>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\tfunction reverse(int) {\r\n\t\t\t\treturn Number.parseInt(\r\n\t\t\t\t\tint\r\n\t\t\t\t\t\t.toString()\r\n\t\t\t\t\t\t.split(\"\")\r\n\t\t\t\t\t\t.reverse()\r\n\t\t\t\t\t\t.join(\"\")\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tfunction lychrelSolve(target) {\r\n\t\t\t\tlet reverse;\r\n\t\t\t\tlet sum;\r\n\t\t\t\tlet count = 0;\r\n\t\t\t\tfor (let i = 0; i < target; i ++) {\r\n\t\t\t\t\tsum = i;\r\n\t\t\t\t\tfor(let n = 0; n < 50; n++) {\r\n\t\t\t\t\t\tif (sum === reverse(sum)){\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (n === 49) {\r\n\t\t\t\t\t\t\tcount += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn count;\r\n\t\t\t}\r\n\t\t\t`}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    );\r\n    this.quadraticPrimesProblem = (\r\n      <div>\r\n        Euler discovered the remarkable quadratic formula:\r\n        <br />\r\n        <br />\r\n        &emsp;&emsp;&emsp;&emsp; <i>n</i>\r\n        <sup>2</sup> + <i>n</i> + 41 <br />\r\n        <br />\r\n        It turns out that the formula will produce 40 primes for the consecutive\r\n        integer values 0 ≤ <i>n</i> ≤ 39. However, when <i>n</i> = 40, 40\r\n        <sup>2</sup>+ 40 + 41 = 40(40 + 1) + 41 is divisible by 41, and\r\n        certainly when <i>n</i>\r\n        = 41, 412 + 41 + 41 is clearly divisible by 41.\r\n        <br /> <br />\r\n        The incredible formula <i>n</i>\r\n        <sup>2</sup> − 79<i>n</i> + 1601 was discovered, which produces 80\r\n        primes for the consecutive values 0 ≤ <i>n</i> ≤ 79. The product of the\r\n        coefficients, −79 and 1601, is −126479. <br />\r\n        <br />\r\n        Considering quadratics of the form:\r\n        <br /> <br />\r\n        &emsp;&emsp;&emsp;&emsp;n<sup>2</sup> + <i>an</i> + <i>b</i>, where |\r\n        <i>a</i>| &lt; 1000 and |<i>b</i>| &ge; 1000\r\n        <br />\r\n        <br />\r\n        &emsp;&emsp;&emsp;&emsp; where |<i>n</i>| is the modulus/absolute value\r\n        of <i>n</i>\r\n        <br />\r\n        &emsp;&emsp;&emsp;&emsp; e.g. |11| = 11 and |−4| = 4 <br />\r\n        <br />\r\n        Find the product of the coefficients, <i>a</i> and <i>b</i>, for the\r\n        quadratic expression that produces the maximum number of primes for\r\n        consecutive values of <i>n</i>, starting with <i>n</i> = 0.\r\n      </div>\r\n    );\r\n    this.quadraticPrimesSolution = (\r\n      <div>\r\n        <pre>\r\n          <code className=\"language-javascript\">\r\n            {`\r\n\t\t\tfunction solution() {\r\n\t\t\t\tlet polynomialX = (x) => {\r\n\t\t\t\t\treturn [-79 - 2 * x, 1601 + 79 * x + Math.pow(x, 2)];\r\n\t\t\t\t};\r\n\r\n\t\t\t\tlet lastAB = [];\r\n\r\n\t\t\t\tfor (let i = -50; i < 0; i++) {\r\n\t\t\t\t\tvar [a, b] = polynomialX(i);\r\n\t\t\t\t\tif (b > 1000 || b < -1000 || a > 1000 || a < -1000) break;\r\n\t\t\t\t\tlastAB = [a, b];\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn lastAB[0] * lastAB[1];\r\n\t\t\t}\r\n\t\t`}\r\n          </code>\r\n        </pre>\r\n      </div>\r\n    );\r\n    this.pandigitalMultiplesProblem = (\r\n      <p>\r\n        Take the number 192 and multiply it by each of 1, 2, and 3:\r\n        <br />\r\n        <br />\r\n        &emsp;&emsp;&emsp;&emsp;192 × 1 = 192\r\n        <br />\r\n        &emsp;&emsp;&emsp;&emsp;192 × 2 = 384\r\n        <br />\r\n        &emsp;&emsp;&emsp;&emsp;192 × 3 = 576\r\n        <br />\r\n        <br />\r\n        By concatenating each product we get the 1 to 9 pandigital, 192384576.\r\n        We will call 192384576 the concatenated product of 192 and (1,2,3)\r\n        <br />\r\n        <br />\r\n        The same can be achieved by starting with 9 and multiplying by 1, 2, 3,\r\n        4, and 5, giving the pandigital, 918273645, which is the concatenated\r\n        product of 9 and (1, 2, 3, 4, 5).\r\n        <br />\r\n        <br />\r\n        What is the largest 1 to 9 pandigital 9-digit number that can be formed\r\n        as the concatenated product of an integer with (1, 2, ... , <i>n</i>)\r\n        where <i>n</i> > 1?\r\n      </p>\r\n    );\r\n\r\n    this.pandigitalMultiplesSolution = (\r\n      <pre>\r\n        <code className=\"language-javascript\">\r\n          {`\r\n\t\t\tfucntion isPandigital (str) {\r\n\t\t\t\treturn \r\n\t\t\t\tstr.includes(\"1\") && \r\n\t\t\t\tstr.includes(\"2\") && \r\n\t\t\t\tstr.includes(\"3\") && \r\n\t\t\t\tstr.includes(\"4\") && \r\n\t\t\t\tstr.includes(\"5\") && \r\n\t\t\t\tstr.includes(\"6\") && \r\n\t\t\t\tstr.includes(\"7\") && \r\n\t\t\t\tstr.includes(\"8\") && \r\n\t\t\t\tstr.includes(\"9\")\r\n\t\t\t}\r\n\r\n\t\t\tfunction task () {\r\n\t\t\t\tlet currentLargest = 0;\r\n\t\t\t\t// largest must start with a 9\r\n\t\t\t\t// but can't be more than 5 digits (n>1)\r\n\t\t\t\t// so i should probably start with a 9\r\n\t\t\t\t// but doing that means n must be 2 (maybe?)\r\n\t\t\t\t// so start at 9999 and go until 9000\r\n\t\t\t\tfor (let i = 9999; i > 9000; i--) {\r\n\t\t\t\t\tpanTest = i.toString() + (i*2).toString();\r\n\t\t\t\t\tif (isPandigital(panTest)) {\r\n\t\t\t\t\t\tconsole.log(panTest);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`}\r\n        </code>\r\n      </pre>\r\n    );\r\n    return (\r\n      <div id=\"card-columns\">\r\n        <CardColumns>\r\n          <ProblemCard\r\n            title=\"Lychrel Numbers\"\r\n            text=\"How many times do you have to reverse add a number to itself before it becomes a palendrome?\"\r\n            onClick={(i, e, o) => this.handleClick(i, e, o)}\r\n            problem={this.lychrelProblem}\r\n            solution={this.lychrelSolution}\r\n            problemNumber=\"55\"\r\n            difficulty=\"5%\"\r\n          />\r\n          <ProblemCard\r\n            title=\"Quadratic primes\"\r\n            text=\"Find a quadratic which produces the maximum number of primes for consecutive inputs\"\r\n            onClick={(i, e, o) => this.handleClick(i, e, o)}\r\n            problem={this.quadraticPrimesProblem}\r\n            solution={this.quadraticPrimesSolution}\r\n            problemNumber=\"27\"\r\n            difficulty=\"5%\"\r\n          />\r\n          <ProblemCard\r\n            title=\"Pandigital Multiples\"\r\n            text=\"Find the largest pandigital number formed from a concatenated product of an integer\"\r\n            onClick={(i, e, o) => this.handleClick(i, e, o)}\r\n            problem={this.pandigitalMultiplesProblem}\r\n            solution={this.pandigitalMultiplesSolution}\r\n            problemNumber=\"38\"\r\n            difficulty=\"5%\"\r\n          />\r\n        </CardColumns>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardGroup;\r\n","import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Prism from \"prismjs\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"./prism.css\";\r\nimport Row from \"react-bootstrap/Row\";\r\nclass Display extends Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll();\r\n    console.log(\"highlight\");\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hideCard: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    this.body = this.props.showProblem\r\n      ? this.props.displayProblem\r\n      : this.props.displaySolution;\r\n    this.buttonName = this.props.showProblem\r\n      ? \"View Solution\"\r\n      : \"Back to Question\";\r\n    return (\r\n      <div>\r\n        <Jumbotron>\r\n          <Row>\r\n            <Col xs={5}>\r\n              <h1>{this.props.displayTitle}</h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                style={{ marginTop: \".5em\" }}\r\n                onClick={this.props.onClick}\r\n              >\r\n                Go back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Jumbotron>\r\n        <Jumbotron fluid>\r\n          <Container style={{ height: \"60%\" }}>\r\n            <div style={{ textAlign: \"left\" }}>{this.body}</div>\r\n          </Container>\r\n          <Button variant=\"outline-primary\" onClick={this.props.showSolution}>\r\n            {this.buttonName}\r\n          </Button>\r\n        </Jumbotron>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./Factors.js\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport CardGroup from \"./CardGroup\";\r\nimport \"./prism.css\";\r\nimport Prism from \"prismjs\";\r\n\r\nimport Display from \"./Display\";\r\nclass App extends Component {\r\n  componentDidUpdate() {\r\n    Prism.highlightAll();\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cards: true,\r\n      displaySolution: \"\",\r\n      displayTitle: \"\",\r\n      displayProblem: \"\",\r\n      showProblem: true\r\n    };\r\n  }\r\n  changeDisplay(title, problem, solution) {\r\n    this.setState(prevState => ({\r\n      cards: !prevState.cards,\r\n      displayTitle: title,\r\n      displayProblem: problem,\r\n      displaySolution: solution,\r\n      showProblem: true\r\n    }));\r\n  }\r\n  showGallery() {\r\n    this.state = {\r\n      cards: true\r\n    };\r\n  }\r\n  showSolution() {\r\n    this.setState(prevState => ({\r\n      showProblem: !prevState.showProblem\r\n    }));\r\n  }\r\n  //   hejl\r\n  render() {\r\n    this.cardsInstance = (\r\n      <CardGroup onClick={(i, e, o) => this.changeDisplay(i, e, o)} />\r\n    );\r\n    this.displayInstance = (\r\n      <div style={{ padding: \"5%\" }}>\r\n        <Display\r\n          displayTitle={this.state.displayTitle}\r\n          displayProblem={this.state.displayProblem}\r\n          displaySolution={this.state.displaySolution}\r\n          showProblem={this.state.showProblem}\r\n          onClick={() => this.changeDisplay()}\r\n          showSolution={() => this.showSolution()}\r\n        />\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        <MainNav />\r\n        <header className=\"App-header\">\r\n          {this.state.cards ? this.cardsInstance : this.displayInstance}\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass MainNav extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n          <Navbar.Brand href=\"./\">Project Euler Solutions</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"https://projecteuler.net/archives\">\r\n                Archievs\r\n              </Nav.Link>\r\n              <Nav.Link>About</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}